SELECT version();

CREATE TABLE mobile(ID INT PRIMARY KEY NOT NULL , MODEL TEXT NOT NULL , PRICE REAL);

INSERT INTO mobile (ID, MODEL, PRICE) VALUES (1, 'SAMSUNG S7272', 3000000);
INSERT INTO mobile (ID, MODEL, PRICE) VALUES (2, 'LG', 3500000);
INSERT INTO mobile (ID, MODEL, PRICE) VALUES (3, 'ONE PLUS 6', 5000000);

SELECT DISTINCT MODEL FROM mobile WHERE MOD(ID, 2) = 0;

SELECT(COUNT(PRICE) - COUNT(DISTINCT PRICE)) FROM mobile;

SELECT MODEL, LENGTH(MODEL) FROM mobile ORDER BY LENGTH(MODEL), MODEL ASC LIMIT 1;
SELECT MODEL, LENGTH(MODEL) FROM mobile ORDER BY LENGTH(MODEL) DESC LIMIT 1;

SELECT DISTINCT MODEL FROM mobile WHERE MODEL SIMILAR TO '(S|L|c)%';

SELECT DISTINCT MODEL FROM mobile WHERE RIGHT(MODEL, 1) IN ('G');
SELECT DISTINCT MODEL FROM mobile WHERE SUBSTR(MODEL, LENGTH(MODEL), LENGTH(MODEL)) IN ('G');

SELECT MODEL FROM mobile WHERE LEFT(MODEL, 1) IN ('L') AND RIGHT(MODEL, 1) IN ('G');
SELECT DISTINCT MODEL FROM mobile WHERE RIGHT(MODEL, 1) NOT IN ('6') OR LEFT(MODEL, 1) NOT IN ('S');

CREATE TABLE TRIANGLES(A INT NOT NULL, B INT NOT NULL, C INT NOT NULL);
INSERT INTO TRIANGLES (A, B, C) VALUES (5, 5, 5);
INSERT INTO TRIANGLES (A, B, C) VALUES (5, 5, 7);
INSERT INTO TRIANGLES (A, B, C) VALUES (5, 6, 7);
INSERT INTO TRIANGLES (A, B, C) VALUES (1, 3, 7);
SELECT CASE
            WHEN A + B > C AND B + C > A AND A + C > B THEN
                CASE
                    WHEN A = B AND B = C THEN 'Equilateral'
                    WHEN A = B OR B = C OR A = C THEN 'Isosceles'
                    ELSE 'Scalene'
                END
            ELSE 'Not A Triangle'
        END
FROM TRIANGLES;

CREATE TABLE OCCUPATIONS(NAME TEXT NOT NULL, OCCUPATION TEXT NOT NULL);
INSERT INTO OCCUPATIONS (NAME, OCCUPATION) VALUES ('Samantha', 'Doctor');
INSERT INTO OCCUPATIONS (NAME, OCCUPATION) VALUES ('Julia', 'Actor');
INSERT INTO OCCUPATIONS (NAME, OCCUPATION) VALUES ('Maria', 'Actor');
INSERT INTO OCCUPATIONS (NAME, OCCUPATION) VALUES ('Meera', 'Singer');
SELECT concat(NAME, CASE
            WHEN OCCUPATION = 'Doctor' THEN '(D)'
            WHEN OCCUPATION = 'Professor' THEN '(P)'
            WHEN OCCUPATION = 'Actor' THEN '(A)'
            WHEN OCCUPATION = 'Singer' THEN '(S)'
        END)
FROM OCCUPATIONS ORDER BY NAME ASC;
SELECT concat('There are total ', COUNT(OCCUPATION), ' ', lower(OCCUPATION), 's.') FROM OCCUPATIONS GROUP BY OCCUPATION ORDER BY Count(OCCUPATION), OCCUPATION;

SELECT SUM(PRICE) FROM mobile WHERE MODEL='LG';
SELECT AVG(PRICE) FROM mobile WHERE MODEL IN ('LG', 'ONE PLUS 6');
SELECT FLOOR(AVG(PRICE)) FROM mobile;
SELECT ROUND(AVG(PRICE)) FROM mobile;

DROP TABLE EMPLOYEES;
CREATE TABLE EMPLOYEES(ID INT PRIMARY KEY, NAME TEXT NOT NULL, SALARY INT NOT NULL, MONTH INT NOT NULL );
INSERT INTO EMPLOYEES(ID, NAME, SALARY, MONTH) VALUES (1, 'Kristeen', 1420, 12);
INSERT INTO EMPLOYEES(ID, NAME, SALARY, MONTH) VALUES (2, 'Ashley', 2006, 1);
INSERT INTO EMPLOYEES(ID, NAME, SALARY, MONTH) VALUES (3, 'Julia', 2210, 3);
INSERT INTO EMPLOYEES(ID, NAME, SALARY, MONTH) VALUES (4, 'Maria', 3000, 9);
SELECT CEIL(AVG(SALARY) - AVG(REPLACE(SALARY, '0', ''))) FROM EMPLOYEES;
select (SALARY * MONTH) as earnings ,count(*) from EMPLOYEES group by 1 order by earnings desc limit 1;